// <auto-generated />
using System;
using Igit.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Igit.Postgres.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20250320135910_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Igit.Entities.Entities.EnergyBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTimeOffset>("PlannedMaintenance")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SensorCount")
                        .HasColumnType("integer");

                    b.Property<Guid>("StationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.ToTable("EnergyBlock");
                });

            modelBuilder.Entity("Igit.Entities.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("515cd069-5c8b-404b-8bd3-7573805573e6"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("f0838fa3-a7ac-4d22-82c0-fda5c2576b22"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Igit.Entities.Entities.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Station");
                });

            modelBuilder.Entity("Igit.Entities.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e9fb603-2396-42b6-872c-152663389d52"),
                            Email = "superuser@mail.com",
                            FullName = "Superuser",
                            RoleId = new Guid("515cd069-5c8b-404b-8bd3-7573805573e6")
                        });
                });

            modelBuilder.Entity("Igit.Entities.Entities.EnergyBlock", b =>
                {
                    b.HasOne("Igit.Entities.Entities.Station", "Station")
                        .WithMany("EnergyBlocks")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Igit.Entities.Entities.User", b =>
                {
                    b.HasOne("Igit.Entities.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Igit.Entities.Entities.Station", b =>
                {
                    b.Navigation("EnergyBlocks");
                });
#pragma warning restore 612, 618
        }
    }
}
